# -*- makefile -*-
# @configure_input@
# $Id: Makefile.am,v 1.38 2002/10/23 15:55:10 emma Exp $

AUTOMAKE_OPTIONS	= foreign dist-bzip2 no-installinfo 1.6 # check-news

SUBDIRS		= tools
VPATH		= $(srcdir)

# external programs
LYNX		= @LYNX@

# external variables
BINDIR		= @bindir@
SBINDIR		= @sbindir@
sysconfdir	= @sysconfdir@/leafnode
SYSCONFDIR	= $(sysconfdir)
VERSION		= @VERSION@

CFLAGS		= @CFLAGS@ @GCC_FLAGS@

sysconf_DATA	= config.example \
	       filters.example

man_MANS = \
	applyfilter.8 \
	checkgroups.8 \
	filterfile.5 \
	fetchnews.8 \
	leafnode.8 \
	newsq.1 \
	rnews.8 \
	texpire.8

dist_MANS = \
	rbcloselist.3 \
	rbdelete.3 \
	rbdestroy.3 \
	rbfind.3 \
	rbinit.3 \
	rblookup.3 \
	rbopenlist.3 \
	rbreadlist.3 \
	rbsearch.3 \
	rbwalk.3

noinst_LIBRARIES	= liblnutil.a
liblnutil_a_SOURCES	= \
	activutil.c \
	artutil.c \
	attributes.h \
	bsearch_range.h \
	bsearch_range.c \
	cmp_firstcolumn.c \
	config.c \
	configparam.c \
	configparam.h \
	configparam_data.c \
	configutil.c \
	critmem.h \
	critmem_calloc.c \
	critmem_malloc.c \
	critmem_realloc.c \
	critmem_strdup.c \
	debugutil.c \
	dirutil.c \
	filterutil.c \
	fopen_reg.c \
	format.h \
	format_ulong.c \
	format_ulong0.c \
	get.h \
	get_any.c \
	getaline.c \
	getfoldedline.c \
	getline.c \
	getline.h \
	getwatermarks.c \
	gmtoff.c \
	h_error.c \
	h_error.h \
	interesting.c \
	lclint_fixes.h \
	leafnode.h \
	link_force.c \
	link_force.h \
	ln_dir.h \
	ln_log.c \
	ln_log.h \
	ln_log_open.c \
	localutil.c \
	lockfile.c \
	log_chmod.c \
	log_close.c \
	log_fchmod.c \
	log_fclose.c \
	log_fsync.c \
	log_rename.c \
	log_unlink.c \
	log_moveto.c \
	mailto.c \
	mailto.h \
	masock.h \
	masock_sa2addr.c \
	masock_sa2name.c \
	masock_sa2port.c \
	mastrcpy.c \
	mastring.c \
	mastring.h \
	mastrncpy.c \
	midutil.c \
	miscutil.c \
	mkdir_parent.c \
	moderated.c \
	msgid.h \
	msgid_hash.c \
	msgid_sanitize.c \
	nfswrite.c \
	nntputil.c \
	parserange.c \
	putaline.c \
	queues.c \
	redblack.c \
	redblack.h \
	sort.c \
	store.c \
	strutil.c \
	sync_dir.c \
	sync_link.c \
	tab2spc.c \
	timeout_getaline.c \
	touch.c \
	ugid.h \
	ugid_gensure.c \
	ugid_gget.c \
	ugid_ggetbyuname.c \
	ugid_gset.c \
	ugid_uensure.c \
	ugid_uget.c \
	ugid_ugetbyuname.c \
	ugid_uset.c \
	validatefqdn.c \
	validatefqdn.h \
	version.h \
	vsnprintf.c \
	wildmat.c \
	writes.c \
	xoverutil.c

# PROGRAMS lists the programs to build
sbin_PROGRAMS = \
	applyfilter \
	checkgroups \
	fetchnews \
	leafnode \
	rnews \
	texpire

bin_PROGRAMS = \
	leafnode-version \
	newsq

noinst_PROGRAMS = \
	amiroot \
	b_sortnl \
	lsort

EXTRA_DIST = \
	$(sysconf_DATA) \
	aclocal.m4 \
	arc4random.3 \
	arc4random.c \
	arc4random.h \
	config_defs.h \
	config.table \
	config.h.in \
	COPYING.LGPL \
	CREDITS \
	Doxyfile \
	ENVIRONMENT \
	FAQ \
	genconfigparam_data.awk \
	leafnode.spec \
	leafnode.spec.in \
	mergesort.3 \
	README \
	README_FIRST \
	README.html \
	update.sh \
	UPDATING

BUILT_SOURCES = \
	config.c \
	configparam_data.c \
	config_defs.h

# special rule to prevent recursion on liblnutil.a
amiroot_SOURCES		= amiroot.c
amiroot_LDADD 		=

b_sortnl_SOURCES	= b_sortnl.c
b_sortnl_LDADD		= @LIBOBJS@

# programs
LDADD			= @LIBOBJS@ liblnutil.a
applyfilter_SOURCES	= applyfilter.c
fetchnews_SOURCES	= fetchnews.c
leafnode_SOURCES	= nntpd.c
lsort_SOURCES		= lsort.c
rnews_SOURCES		= rnews.c
texpire_SOURCES		= texpire.c
checkgroups_SOURCES	= checkgroups.c
newsq_SOURCES		= newsq.c
leafnode_version_SOURCES= leafnode-version.c

DISTCLEANFILES = config.c config_defs.h configparam_data.c README \
	config.table.sorted

# GENERATED SOURCES ========================================
config.c: Makefile
	@echo "creating config.c"
	@echo  >.$@ "/* This file is automatically generated by Makefile"
	@echo >>.$@ " * *** DO NOT EDIT ***"
	@echo >>.$@ " */"
	@echo >>.$@ "const char *bindir = \"$(BINDIR)\";"
	@echo >>.$@ "const char *spooldir = \"$(SPOOLDIR)\";"
	@echo >>.$@ "const char *sysconfdir = \"$(SYSCONFDIR)\";"
	@echo >>.$@ "const char *lockfile = \"$(LOCKFILE)\";"
	@echo >>.$@ "const char *version = \"@VERSION@\";"
	@echo >>.$@ "const char *GZIP = \"$(GZIP)\";"
	@echo >>.$@ "const char *BZIP2 = \"$(BZIP2)\";"
	@echo >>.$@ "const char *DEFAULTMTA = \"$(DEFAULTMTA)\";"
	@echo >>.$@ "const char *RUNAS_USER = \"$(RUNAS_USER)\";"
#	@echo >>.$@ 'const char *compileinfo = "*** leafnode @PACKAGE_VERSION@ ***\ncompile date:' "`env - PATH=/bin:/usr/bin TZ=GMT date`" '\ncompile machine: ' "`uname -a`" '\\nCC=$(CC)\\nCPPFLAGS=$(CPPFLAGS)\\nCFLAGS=$(CFLAGS)\\nCPP=$(CPP)\\nCXX=$(CXX)\\nCXXFLAGS=$(CXXFLAGS)\\nLDFLAGS=$(LDFLAGS)\\nLIBS=$(LIBS)\\nAR=$(AR)\\nARFLAGS=$(ARFLAGS)";'
	if test -f $@ && cmp >/dev/null .$@ $@ && rm -f .$@ ; then touch $@ ; else rm -f $@ ; mv .$@ $@ ; fi

config_defs.h: $(srcdir)/config.table $(srcdir)/configparam.h
	@echo creating $@
	@$(AWK) -F, '\
	BEGIN { \
		print "/* file generated from $(srcdir)/config.table, do not edit! */\n"; \
		print "enum {" \
		} \
	{\
		print $$2 ","; \
		} \
	END { \
		print "};" \
		}' <$(srcdir)/config.table >$@ || rm -f $@

configparam_data.c: $(srcdir)/config.table b_sortnl genconfigparam_data.awk
	rm -f config.table.sorted
	./b_sortnl <$(srcdir)/config.table >config.table.sorted
	$(AWK) -f $(srcdir)/genconfigparam_data.awk <config.table.sorted >.$@ \
	&& { rm -f $@ ; mv -f .$@ $@ ; }


.PHONY:	update
update:
	@./update.sh $(SPOOLDIR) $(SYSCONFDIR) $(LOCKFILE) $(RUNAS_USER) $(RUNAS_GROUP)

install-data-hook:
# directories
	$(INSTALL) -d -m 750 $(DESTDIR)$(SPOOLDIR)
	$(INSTALL) -d -m 750 $(DESTDIR)$(SPOOLDIR)/leaf.node
	-./amiroot && chown $(RUNAS_USER) $(DESTDIR)$(SPOOLDIR)
	-./amiroot && chown $(RUNAS_USER) $(DESTDIR)$(SPOOLDIR)/leaf.node
	-./amiroot && chgrp $(RUNAS_GROUP) $(DESTDIR)$(SPOOLDIR)
	-./amiroot && chgrp $(RUNAS_GROUP) $(DESTDIR)$(SPOOLDIR)/leaf.node
	p=`dirname $(DESTDIR)$(LOCKFILE)` ; \
	if test ! -d $$p ; then \
	  $(INSTALL) -d -m 750 $$p ; \
	  ./amiroot && chown $(RUNAS_USER) $$p ; \
	  ./amiroot && chgrp $(RUNAS_GROUP) $$p ; true ; \
        fi
# don't use test -e, it's broken on Solaris (only in /usr/bin/test)
	rm -f $(DESTDIR)$(sbindir)/leafnode-version
	./amiroot && p=$(DESTDIR)$(bindir)/newsq && chown 0 $$p \
		&& chgrp $(RUNAS_GROUP) $$p && chmod 2755 $$p  ; true
	@echo
	@echo "*** DO MAKE SURE THAT YOU RUN texpire -r IF YOU HAVE ARTICLES IN THE SPOOL ***"
	@echo
	@echo "Then edit /etc/inetd.conf to start $(DESTDIR)$(SBINDIR)/leafnode"
	@echo "and restart inetd. Also read the instructions on updating in the README file."

uninstall-local:
	-rm -f $(SYSCONFDIR)/config.example
	-rmdir $(SYSCONFDIR)
	-rm -r $(SPOOLDIR)/leaf.node
	-rmdir $(SPOOLDIR)/in.coming
	-rmdir $(SPOOLDIR)/out.going
	-rmdir $(SPOOLDIR)/failed.postings
	-rmdir $(SPOOLDIR)/backup.moderated
	-rmdir $(SPOOLDIR)/temp.files
	-rmdir $(SPOOLDIR)/interesting.groups
	-rmdir $(SPOOLDIR)/message.id
	@echo
	@echo Edit /etc/inetd.conf to remove $(BINDIR)/leafnode and restart inetd

.PHONY:	doxygen
doxygen:
	-rm -rf $(srcdir)/dox/html/
	cd $(srcdir) && doxygen

README:	README.html $(LYNX)
	if test "$(LYNX)" != "no" ; then \
		rm -f README ; \
		$(LYNX) -dump $(srcdir)/README.html >$@ ; \
	fi

.PHONY:	rpm
rpm: dist leafnode.spec
	-ln -s `pwd`/leafnode-$(VERSION).tar.gz $(RPMSRC)/SOURCES
	-ln -s `pwd`/leafnode.spec $(RPMSRC)/SPECS
	unset IFS ; rpm -ba $(RPMSRC)/SPECS/leafnode.spec 2>&1 \
	| grep '^Wrote:' | $(SED) -e 's/^Wrote: //' \
	| while read r ; do mv -f "$$r" . || exit 1 ; done
