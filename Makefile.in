# -*- makefile -*-
# $Id: Makefile.in,v 1.8 2000/11/23 04:10:41 emma Exp $

VERSION = @VERSION@

srcdir = @srcdir@
VPATH = .:@srcdir@

# Programs
CC      = @CC@
INSTALL = @INSTALL@
RANLIB  = @RANLIB@
AWK	= @AWK@
AR	= @AR@
GPERF	= @GPERF@
SED	= @SED@
# ARFLAGS = -rcv # take defaults.

# Libraries
PCRELIB = @PCRELIB@
LINKPCRELIB = @LINKPCRELIB@
CRYPTLIB = @CRYPTLIB@

# Flags
DEBUG  = -g
STRIP  =
CFLAGS = @CFLAGS@ -I. @DEFS@ @GCC_FLAGS@ $(DEBUG)
LIBS   = @LIBS@
ADDLIBS  = liblnutil.a libugid.a

# Directories and Paths
# News is stored in SPOOLDIR, configuration is kept in LIBDIR
# LOCKFILE is the lockfile generated by the leafnode programs
PREFIX_USR = @prefix@
PREFIX_VAR = /var
USRDIR = $(PREFIX_USR)/bin
BINDIR = $(PREFIX_USR)/sbin
MANDIR = $(PREFIX_USR)/man
SPOOLDIR = @SPOOLDIR@
LIBDIR   = @sysconfdir@
LOCKFILE = @LOCKFILE@
RPMSRC   = @RPMSRC@

# external programs
LYNX = @LYNX@
RPM = @RPM@

MANFILES = applyfilter.8 checkgroups.8 fetchnews.5 fetchnews.8 \
	   leafnode.8 newsq.1 rnews.8 texpire.8
MANSRC   = applyfilter.8.in checkgroups.8.in fetchnews.5.in fetchnews.8.in \
	   leafnode.8.in newsq.1.in rnews.8.in texpire.8.in
SRCFILES = nntputil.c configutil.c xoverutil.c activutil.c miscutil.c \
	   artutil.c filterutil.c localutil.c config.c \
	   applyfilter.c checkgroups.c newsq.c nntpd.c fetchnews.c texpire.c \
	   rnews.c getline.c getaline.c critmem_malloc.c critmem_realloc.c \
	   vsnprintf.c strdup.c get_any.c ln_log_open.c ln_log.c dirutil.c \
	   strutil.c configparam.c config.table h_error.c \
	   ugid_gensure.c ugid_ggetbyuname.c ugid_gget.c ugid_gset.c \
	   ugid_uensure.c ugid_ugetbyuname.c ugid_uget.c ugid_uset.c \
	   b_sortnl.c format_ulong.c inet_ntop.c

LIBFILES = nntputil.o configutil.o xoverutil.o activutil.o miscutil.o \
	   artutil.o filterutil.o localutil.o critmem_malloc.o \
	   critmem_realloc.o dirutil.o strutil.o configparam.o \
	   vsnprintf.o strdup.o get_any.o getaline.o config.o \
	   ln_log_open.o ln_log.o configparam_data.o h_error.o \
	   format_ulong.o \
	   @LIBOBJS@

HDRFILES = leafnode.h get.h critmem.h acconfig.h ln_log.h configparam.h \
	   config_defs.h attributes.h ugid.h getline.h h_error.h format.h

PROGRAMS = nntpd rnews fetchnews texpire checkgroups applyfilter newsq

all: $(PROGRAMS) $(MANFILES)

liblnutil.a: $(LIBFILES)
	$(AR) $(ARFLAGS) $@ $?
	$(RANLIB) $@

libpcre.a: pcre/libpcre.a
	cp pcre/libpcre.a libpcre.a

pcre/libpcre.a:
	@echo "Building Philip Hazel's Perl regular expressions library..."
	cd pcre && $(MAKE) libpcre.a

nntpd: nntpd.o $(ADDLIBS) @CRYPTLIB@
	$(CC) $(CFLAGS) -o $@ nntpd.o $(CRYPTLIB) $(LIBS) $(ADDLIBS)

rnews: rnews.o $(ADDLIBS)
	$(CC) $(CFLAGS) -o $@ rnews.o $(LIBS) $(ADDLIBS)

fetchnews: fetchnews.o $(ADDLIBS) @PCRELIB@
	$(CC) $(CFLAGS) -o $@ fetchnews.o $(LIBS) $(ADDLIBS) $(LINKPCRELIB) 

texpire: texpire.o $(ADDLIBS)
	$(CC) $(CFLAGS) -o $@ texpire.o $(LIBS) $(ADDLIBS)

checkgroups: checkgroups.o $(ADDLIBS)
	$(CC) $(CFLAGS) -o $@ checkgroups.o $(LIBS) $(ADDLIBS)

applyfilter: applyfilter.o $(ADDLIBS) @PCRELIB@
	$(CC) $(CFLAGS) -o $@ applyfilter.o  $(LIBS) $(ADDLIBS) $(LINKPCRELIB)

.c.o: leafnode.h
	$(CC) $(CFLAGS) -o $@ -c $<

newsq: newsq.o $(ADDLIBS)
	$(CC) $(CFLAGS) -o $@ newsq.o $(LIBS) $(ADDLIBS)

.PHONY:	clean distclean realclean
clean:
	rm -f *.o *.a
	test -f pcre/Makefile && cd pcre && $(MAKE) clean

realclean: distclean

distclean: clean
	rm -f $(PROGRAMS) *.d *.[1578]
	rm -f config.h Makefile pcre/Makefile *.rej *.orig
	rm -f config.status config.cache config.log

update:
	@$(srcdir)/update.sh $(SPOOLDIR) $(LIBDIR) $(LOCKFILE)

config.o: config.c

config.c: Makefile
	@echo "creating config.c"
	@echo  >.$@ "/* This file is automatically generated by Makefile"
	@echo >>.$@ " * *** DO NOT EDIT ***"
	@echo >>.$@ " */"
	@echo >>.$@ "const char *bindir=\"$(BINDIR)\";"
	@echo >>.$@ "const char *spooldir=\"@SPOOLDIR@\";"
	@echo >>.$@ "const char *libdir=\"$(LIBDIR)\";"
	@echo >>.$@ "const char *lockfile=\"@LOCKFILE@\";"
	@echo >>.$@ "const char *version=\"@VERSION@\";"
	if cmp .$@ $@ && rm .$@ ; then touch $@ ; else mv .$@ $@ ; fi

config_defs.h: config.table configparam.h
	@echo creating $@
	@$(AWK) -F, '\
	BEGIN { \
		print "/* file generated from $<, do not edit! */\n"; \
		print "enum {" \
		} \
	{\
		print $$2 ","; \
		} \
	END { \
		print "};" \
		}' <config.table >$@ || rm -f $@

configparam_data.c: config.table b_sortnl Makefile
	b_sortnl <config.table | awk '\
	BEGIN	{ print "/* file generated from $<, do not edit! */\n";\
  		  print "#include \"configparam.h\"";\
		  print "#include \"config_defs.h\"\n";\
		  print "const struct configparam configparam[] = {";\
		  FS=","; }\
	        { printf "  {\"%s\",%s},\n",$$1,$$2; }\
	END 	{ print "};";\
		  print "";\
		  print "const int count_configparam = sizeof(configparam)/sizeof(configparam[0]);" }' >.$@ && mv .$@ $@

# ----------------------------------------------------------------------

install-strip:
	$(MAKE) install STRIP=-s

install: nntpd fetchnews texpire checkgroups applyfilter newsq rnews
	$(INSTALL) -d -o root -m 755 $(INSTALLROOT)$(MANDIR)/man1
	$(INSTALL) -d -o root -m 755 $(INSTALLROOT)$(MANDIR)/man5
	$(INSTALL) -d -o root -m 755 $(INSTALLROOT)$(MANDIR)/man7
	$(INSTALL) -d -o root -m 755 $(INSTALLROOT)$(MANDIR)/man8
	$(INSTALL) -d -o root -g bin -m 755 $(INSTALLROOT)$(BINDIR)
	$(INSTALL) -d -o root -g bin -m 755 $(INSTALLROOT)$(USRDIR)
	$(INSTALL) -c -g news -m 750 -o news $(STRIP) nntpd $(INSTALLROOT)$(BINDIR)/leafnode
	$(INSTALL) -c -g news -m 750 -o news $(STRIP) rnews $(INSTALLROOT)$(BINDIR)/rnews
	$(INSTALL) -c -g news -m 4755 -o root $(STRIP) fetchnews $(INSTALLROOT)$(BINDIR)/fetchnews
	$(INSTALL) -c -g news -m 4755 -o root $(STRIP) texpire $(INSTALLROOT)$(BINDIR)/texpire
	$(INSTALL) -c -g news -m 750 -o news $(STRIP) checkgroups $(INSTALLROOT)$(BINDIR)/checkgroups
	$(INSTALL) -c -g news -m 750 -o news $(STRIP) applyfilter $(INSTALLROOT)$(BINDIR)/applyfilter
	$(INSTALL) -c -g news -m 755 -o news $(STRIP) newsq $(INSTALLROOT)$(USRDIR)/newsq
	$(INSTALL) -c -m 644 $(srcdir)/*.8 $(INSTALLROOT)$(MANDIR)/man8
	$(INSTALL) -c -m 644 $(srcdir)/*.5 $(INSTALLROOT)$(MANDIR)/man5
	if test $(PCRELIB) ; then $(INSTALL) -c -m 644 $(srcdir)/pcre/pcre.7 $(INSTALLROOT)$(MANDIR)/man7 ; fi
	$(INSTALL) -c -m 644 $(srcdir)/*.1 $(INSTALLROOT)$(MANDIR)/man1
	mkdir -p `dirname $(INSTALLROOT)$(LOCKFILE)`
	mkdir -p $(INSTALLROOT)$(SPOOLDIR)
	chmod 2755 $(INSTALLROOT)$(SPOOLDIR)
	mkdir -p $(INSTALLROOT)$(SPOOLDIR)/leaf.node
	chmod 2755 $(INSTALLROOT)$(SPOOLDIR)/leaf.node
	test -e $(INSTALLROOT)$(SPOOLDIR)/leaf.node/local.groups || \
		echo -n >$(INSTALLROOT)$(SPOOLDIR)/leaf.node/local.groups
	mkdir -p $(INSTALLROOT)$(LIBDIR)
	-chown news:news `dirname $(INSTALLROOT)$(LOCKFILE)`
	-chown news:news $(INSTALLROOT)$(SPOOLDIR) 
	-chown news:news $(INSTALLROOT)$(LIBDIR)
	$(INSTALL) -m 600 -o news $(srcdir)/config.example $(INSTALLROOT)$(LIBDIR)
	-chown -f news:news $(INSTALLROOT)$(LIBDIR)/config
	-chmod -f 600 $(INSTALLROOT)$(LIBDIR)/config
	@echo Edit /etc/inetd.conf to start $(INSTALLROOT)$(BINDIR)/leafnode and restart inetd.
	@echo Also read the instructions on updating in the README file.

uninstall-bins:
	-rm $(BINDIR)/fetchnews
	-rm $(BINDIR)/checkgroups
	-rm $(BINDIR)/texpire
	-rm $(BINDIR)/leafnode
	-rm $(BINDIR)/rnews
	-rm $(BINDIR)/applyfilter
	-rm $(USRDIR)/newsq
	-rm $(MANDIR)/man8/fetchnews.8
	-rm $(MANDIR)/man8/rnews.8
	-rm $(MANDIR)/man8/checkgroups.8
	-rm $(MANDIR)/man8/texpire.8
	-rm $(MANDIR)/man8/leafnode.8
	-rm $(MANDIR)/man8/applyfilter.8
	-rm $(MANDIR)/man5/fetchnews.5
	-rm $(MANDIR)/man1/newsq.1
	if test $(PCRELIB) ; then rm ($INSTALLROOT)$(MANDIR)/man7/pcre.7 ; fi

uninstall: uninstall-bins
	-rm -r $(LIBDIR)
	-rm -r $(SPOOLDIR)/leaf.node
	-rm -r $(SPOOLDIR)/interesting.groups
	-rm -r $(SPOOLDIR)/message.id/*
	-rmdir $(SPOOLDIR)/out.going
	@echo Edit /etc/inetd.conf to remove $(BINDIR)/leafnode and restart inetd

dist:	leafnode.spec
	autoheader
	autoconf
	if test "$(LYNX)" != "no" ; then rm -f README ; $(LYNX) -dump README.html > README ; fi
	-chmod -R a+rX leafnode-$(VERSION)
	rm -rf leafnode-$(VERSION)
	mkdir -p leafnode-$(VERSION)
	cp $(MANSRC) $(HDRFILES) $(SRCFILES) leafnode.spec.in \
		INSTALL README* CREDITS TODO ChangeLog FAQ \
		config.example config.h.in configure.in Makefile.in \
		configure install-sh aclocal.m4 leafnode.spec \
		update.sh stamp-h.in\
		leafnode-$(VERSION)
	chmod a+r leafnode-$(VERSION)/*
	cp -R doc_german leafnode-$(VERSION)/
	cp -R doc_catalan leafnode-$(VERSION)
	mkdir -p  leafnode-$(VERSION)/tools
	cp tools/*.pl leafnode-$(VERSION)/tools/
	chmod -R a+rX leafnode-$(VERSION)
	tar cf leafnode-$(VERSION).tar leafnode-$(VERSION)
	gzip -cf9 <leafnode-$(VERSION).tar >leafnode-$(VERSION).tar.gz
	bzip2 -cf9 <leafnode-$(VERSION).tar >leafnode-$(VERSION).tar.bz2
	mkdir -p  leafnode-$(VERSION)/pcre
	cp -p -r -f pcre leafnode-$(VERSION)/
	chmod -R a+rX leafnode-$(VERSION)
	tar cf leafnode-pcre-$(VERSION).tar leafnode-$(VERSION)
	gzip -f9 leafnode-pcre-$(VERSION).tar
	rm -rf leafnode-$(VERSION)

$(srcdir)/configure: $(srcdir)/configure.in $(srcdir)/aclocal.m4
	cd $(srcdir) && autoconf

$(srcdir)/config.h.in: $(srcdir)/stamp-h.in
$(srcdir)/stamp-h.in: $(srcdir)/configure.in $(srcdir)/aclocal.m4 $(srcdir)/acconfig.h
	cd $(srcdir) && autoheader
	echo timestamp >$(srcdir)/stamp-h.in

config.h: stamp-h
stamp-h: $(srcdir)/config.h.in config.status
	./config.status

Makefile: $(srcdir)/Makefile.in config.status
	./config.status

config.status: $(srcdir)/configure
	./config.status --recheck

leafnode.spec: $(srcdir)/leafnode.spec.in config.status
	./config.status

%.8: $(srcdir)/%.8.in config.status
	./config.status

%.1: $(srcdir)/%.1.in config.status
	./config.status

rpm: dist leafnode.spec
	-ln -s `pwd`/leafnode-$(VERSION).tar.gz $(RPMSRC)/SOURCES
	-ln -s `pwd`/leafnode.spec $(RPMSRC)/SPECS
	rpm -ba $(RPMSRC)/SPECS/leafnode.spec

.PHONY:	depend
depend:
	makedepend -f$(srcdir)/Makefile.in -s"# DEPENDENCIES, type make depend to remake" -Y -I$(srcdir) *.c 2>/dev/null
	./config.status


# ugid_Makefile
# (C) 2000 by Matthias Andree
libugid.a: ugid_gensure.o ugid_gget.o ugid_ggetbyuname.o ugid_gset.o \
	ugid_uensure.o ugid_uget.o ugid_ugetbyuname.o ugid_uset.o 
	$(AR) $(ARFLAGS) $@ $?
	$(RANLIB) $@
# ugid_Makefile ends here.



# DEPENDENCIES, type make depend to remake

activutil.o: leafnode.h config.h critmem.h ln_log.h attributes.h
applyfilter.o: leafnode.h config.h critmem.h ln_log.h attributes.h
artutil.o: leafnode.h config.h critmem.h ln_log.h attributes.h
checkgroups.o: leafnode.h config.h
configparam.o: config_defs.h configparam.h config.h
configparam_data.o: configparam.h config.h config_defs.h
configutil.o: leafnode.h config.h critmem.h ln_log.h attributes.h
configutil.o: config_defs.h configparam.h
critmem_malloc.o: critmem.h ln_log.h attributes.h
critmem_realloc.o: critmem.h ln_log.h attributes.h
dirutil.o: ln_log.h attributes.h leafnode.h config.h
fetchnews.o: leafnode.h config.h get.h critmem.h ln_log.h attributes.h
filterutil.o: leafnode.h config.h critmem.h ln_log.h attributes.h
getaline.o: getline.h config.h ln_log.h attributes.h leafnode.h
get_any.o: get.h
getline.o: critmem.h getline.h config.h
ln_log.o: ln_log.h attributes.h
ln_log_open.o: ln_log.h attributes.h
localutil.o: leafnode.h config.h critmem.h ln_log.h attributes.h
miscutil.o: leafnode.h config.h critmem.h ugid.h ln_log.h attributes.h
newsq.o: leafnode.h config.h
nntpd.o: leafnode.h config.h critmem.h ln_log.h attributes.h
nntputil.o: leafnode.h config.h ln_log.h attributes.h h_error.h
rnews.o: leafnode.h config.h get.h critmem.h ln_log.h attributes.h
strdup.o: config.h
strutil.o: leafnode.h config.h
texpire.o: leafnode.h config.h critmem.h ln_log.h attributes.h
ugid_gensure.o: ugid.h
ugid_ggetbyuname.o: ugid.h
ugid_gget.o: ugid.h
ugid_gset.o: ugid.h
ugid_uensure.o: ugid.h
ugid_ugetbyuname.o: ugid.h
ugid_uget.o: ugid.h
ugid_uset.o: ugid.h
vsnprintf.o: config.h
xoverutil.o: leafnode.h config.h critmem.h ln_log.h attributes.h
