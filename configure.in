dnl autoconf script for leafnode
dnl written by Cornelius Krasel, 1999
dnl enhanced by Matthias Andree, 2000
dnl Process this file with autoconf to produce a configure script.
AC_INIT(leafnode.h)
AC_CONFIG_HEADER(config.h)

dnl version information
VERSION="2.0b5_ma6"
AC_SUBST(VERSION)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

dnl If we're using gcc, enable some warnings
if test "$GCC" = yes
then
GCC_FLAGS="-Wall -Wstrict-prototypes -Wmissing-prototypes"
fi

AC_CHECK_PROG(AR, ar, ar)
AC_PATH_PROG(LYNX, lynx)
AC_PATH_PROG(RPM, rpm)
AC_PATH_PROG(SED, sed)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([errno.h fcntl.h limits.h sys/time.h syslog.h unistd.h])

dnl Check whether all necessary include files are there
AC_MSG_CHECKING(for system include files)
AC_CACHE_VAL(cf_cv_sysheaders, AC_TRY_COMPILE([
#include <sys/param.h>],[
    return 0;],
  [cf_cv_sysheaders="yes"],
  [cf_cv_sysheaders="no"])
 )
if test "$cf_cv_sysheaders" = "yes"
then
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
  AC_MSG_ERROR(Kernel sources not installed - unable to continue)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_TM

dnl check where to put the spooldir
AC_MSG_CHECKING(spooldir)
AC_ARG_WITH(spooldir,
[  --with-spooldir         news spool directory (/var/spool/news)],
  if echo "$withval" | egrep >/dev/null -v '^/' ; then
    AC_MSG_ERROR(you must give an absolute path)
  fi
  withval=`echo "$withval" | sed 'sx/*$xx;'`
, 
  withval="/var/spool/news"
)
SPOOLDIR=$withval
AC_MSG_RESULT($SPOOLDIR)
AC_SUBST(SPOOLDIR)

dnl check where to put the confdir
if test "$sysconfdir" = '${prefix}/etc' \
  -a "x$prefix" = xNONE ; then 
  CONFDIR='/etc/leafnode'
else
  CONFDIR="$sysconfdir"
fi
if test "$CONFDIR" != "$sysconfdir"; then 
  AC_WARN(***)
  AC_WARN(*** overriding sysconfdir to $CONFDIR)
  AC_WARN(*** use --sysconfdir to fix)
  AC_WARN(*** use --sysconfdir='\$prefix/etc' to get)
  AC_WARN(*** the default autoconf behaviour)
  AC_WARN(***)
  sleep 1
fi
sysconfdir=$CONFDIR
AC_SUBST(sysconfdir)

dnl check where to put the lockfile
AC_MSG_CHECKING(lockfile)
AC_ARG_WITH(lockfile,
[  --with-lockfile         lockfile (/var/lock/news/fetchnews.lck)],
  if echo "$withval" | egrep >/dev/null -v '^/' ; then
    AC_MSG_ERROR(you must give an absolute path)
  fi
, 
  withval=/var/lock/news/fetchnews.lck  
)
LOCKFILE=$withval
AC_MSG_RESULT($LOCKFILE)
AC_SUBST(LOCKFILE)

dnl check for rpm build dir
AC_MSG_CHECKING(rpm build dir)
d=/usr/src/packages
test -d ${d}/SPECS || d=/usr/src/redhat dnl red hat 
test -d ${d}/SPECS || d=none
RPMSRC=${d}
AC_MSG_RESULT(${RPMSRC})
test "${RPMSRC}" = "none" || AC_SUBST(RPMSRC) 

dnl Check for libcrypt
AC_CHECK_LIB(crypt, crypt, [CRYPTLIB="-lcrypt"])
AC_SUBST(CRYPTLIB)

dnl Check for PCRE library.
AC_CHECK_HEADER(pcre.h)
if test "$ac_cv_header_pcre_h" = yes
then
  # do not add this to LIBS
  AC_CHECK_LIB(pcre, pcre_compile, LINKPCRELIB="-lpcre")
fi
if test "$ac_cv_lib_pcre_pcre_compile" != yes
then
  echo "*** error: you do not have PCRE installed. You must install PCRE"
  echo "*** before you can install leafnode."
  echo  
  if test -d pcre ; then
    echo "*** Please install PCRE. To do so, become root and do:"
    echo "*** cd `pwd`/pcre && ./configure && make install"
  else
    echo "*** Please download PCRE 3.4 from http://www.pcre.org/"
    echo "*** and install it, preferably as shared version."
    echo "*** Then, reconfigure leafnode."
  fi
  AC_ERROR(PCRE missing)
else
  AC_DEFINE(HAVE_LIBPCRE)
  AC_MSG_CHECKING(for pcre_compile version)
  AC_CACHE_VAL(cf_cv_new_pcre_compile,[AC_TRY_COMPILE([
#include <pcre.h>],[
	char * pattern;
	int options;
	const char **errptr;
	int *erroffset;
	const unsigned char *tableptr;
	pcre_compile(pattern, options, errptr, erroffset, tableptr);],
  [cf_cv_new_pcre_compile="yes"],
  [cf_cv_new_pcre_compile="no"])
 ])
  if test $cf_cv_new_pcre_compile = "yes"
  then
    AC_MSG_RESULT(2.01)
    AC_DEFINE(NEW_PCRE_COMPILE)
  else
    AC_MSG_RESULT(2.00)
  fi
  AC_MSG_CHECKING(for pcre_exec version)
  AC_CACHE_VAL(cf_cv_new_pcre_exec,[AC_TRY_COMPILE([
#include <pcre.h>],[
	const pcre *pattern;
	const pcre_extra *extra;
	const char *subject;
	int length;
	int options;
	int *ovec;
	int ovecsize;
	pcre_exec(pattern, extra, subject, length, options, ovec, ovecsize);],
   [cf_cv_new_pcre_exec="no"], [ cf_cv_new_pcre_exec="yes" ])
 ])
  if test $cf_cv_new_pcre_exec = "yes"
  then
    AC_MSG_RESULT(2.06)
    AC_DEFINE(NEW_PCRE_EXEC)
  else
    AC_MSG_RESULT(2.05)
  fi
fi
AC_SUBST(PCRELIB)
AC_SUBST(LINKPCRELIB)

dnl Check for timezone and related stuff
AC_MSG_CHECKING(for gmtoff in struct tm)
AC_CACHE_VAL(cf_cv_have_gmtoff,[AC_TRY_COMPILE([
#include <time.h>],[
	time_t now;
	long gmtoff;
	struct tm gmt;
	now = time(0);
	gmt = *(gmtime(&now));
	gmtoff = gmt.tm_gmtoff;],
   [cf_cv_have_gmtoff="yes"], [ cf_cv_have_gmtoff="no" ])
])
if test $cf_cv_have_gmtoff = "yes"
then
  AC_MSG_RESULT(yes)
  AC_DEFINE(HAVE_GMTOFF)
else
  AC_MSG_RESULT(no)
fi

dnl Checks for library functions.
AC_FUNC_STRFTIME
AC_FUNC_UTIME_NULL
AC_FUNC_VPRINTF
AC_TYPE_SIGNAL
AC_CHECK_FUNCS([getcwd gethostname gettext mkdir mktime regcomp rmdir socket strdup strerror strstr strtol strtoul mkstemp setgid setuid snprintf vsnprintf])

AC_REPLACE_FUNCS(getline inet_ntop)

# Whenever both -lsocket and -lnsl are needed, it seems to be always the
# case that gethostbyname requires -lnsl.  So, check -lnsl first, for it
# to be in LIBS before the setsockopt checks are performed.  *However*,
# on SINIX-N 5.43, this is false, and gethostent seems to be a better
# candidate. So, let's use it below instead of gethostbyname, and see.
# Stolen from GNU tar 1.12

AC_CHECK_FUNC(gethostent)
if test $ac_cv_func_gethostent = no; then
  AC_CHECK_LIB(nsl, gethostent)
fi
AC_CHECK_FUNC(setsockopt)
if test $ac_cv_func_setsockopt = no; then
  AC_CHECK_LIB(socket, setsockopt)
fi

### The 'pcre' library uses non-standard #define's
test ".$ac_cv_func_strerror" != ".yes" && \
test ".$cf_cv_have_sys_errlist" = ".yes" && \
	PCRE_DEFINES="$PCRE_DEFINES -DSTRERROR_FROM_ERRLIST"
test ".$ac_cv_func_memmove" != ".yes" && \
test ".$cf_cv_good_bcopy" = ".yes" && \
	PCRE_DEFINES="$PCRE_DEFINES -DUSE_BCOPY"

dnl check whether called with --with-ipv6
AC_ARG_WITH(ipv6,
[  --with-ipv6             support IPv6],
  if test "$withval" != "no" ; then
    AC_DEFINE(HAVE_IPV6)
  fi
)

AC_SUBST(PCRE_DEFINES)
AC_SUBST(GCC_FLAGS)

AC_OUTPUT(stamp-h Makefile leafnode.spec leafnode.8 newsq.1 applyfilter.8 fetchnews.5 fetchnews.8 rnews.8 texpire.8 checkgroups.8)
